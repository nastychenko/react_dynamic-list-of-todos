{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","onInputChange","onSelectChange","onChange","event","target","value","placeholder","e","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","modalLoading","setModalLoading","useEffect","loadUser","a","userId","Number","data","href","email","name","filterFunction","filterType","enteredQuery","visibleTodos","toLowerCase","filter","includes","App","setTodos","isLoading","setIsLoading","select","setSelect","setQuery","loadTodos","filterValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3c9682b.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    todo.completed ? ('has-text-success') : ('has-text-danger')\n                  }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={selectedTodo?.id === todo.id\n                      ? 'far fa-eye-slash' : 'far fa-eye'}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { SelectTypes } from '../../types/selectTypes';\n\ntype Props = {\n  query: string,\n  onInputChange: (query: string) => void\n  onSelectChange: (select: SelectTypes) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onInputChange,\n  onSelectChange,\n}) => {\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onSelectChange(event.target.value as SelectTypes);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => onInputChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onInputChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | null) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [modalLoading, setModalLoading] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const data = await getUser(Number(selectedTodo?.userId));\n\n      setUser(data);\n      setModalLoading(true);\n    };\n\n    loadUser();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { SelectTypes } from './types/selectTypes';\n\nconst filterFunction = (todos: Todo[], filterType: SelectTypes, enteredQuery: string) => {\n  let visibleTodos = [...todos];\n  const query = enteredQuery.toLowerCase();\n\n  switch (filterType) {\n    case 'completed':\n      visibleTodos = visibleTodos.filter(todo => todo.completed);\n      break;\n\n    case 'active':\n      visibleTodos = visibleTodos.filter(todo => !todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  return visibleTodos.filter(todo => todo.title.toLowerCase().includes(query));\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [select, setSelect] = useState<SelectTypes>('all');\n  const [query, setQuery] = useState('');\n\n  const setActivityFilter = (filterValue: SelectTypes) => {\n    setSelect(filterValue);\n  };\n\n  const setCurrentQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const focusOnTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const unFocusOnTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const data = await getTodos();\n\n      setTodos(data);\n      setIsLoading(true);\n    };\n\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onInputChange={setCurrentQuery}\n                onSelectChange={setActivityFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading ? <Loader /> : (\n                <TodoList\n                  todos={filterFunction(todos, select, query)}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={focusOnTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={unFocusOnTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}