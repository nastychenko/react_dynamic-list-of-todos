{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onChange","useState","query","setQuery","onSelectChange","todoType","filter","useEffect","event","target","value","placeholder","setTimeout","includes","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","then","fetch","res","json","getTodos","Loader","TodoModal","selectedTodo","user","setUser","modalLoading","setModalLoading","loadUser","a","userId","Number","data","href","name","App","setTodos","visibleTodos","setVisivleTodos","loading","setLoading","visibleFunction","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95c441bd.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setSelectedTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              {todo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    todo.completed ? ('has-text-success') : ('has-text-danger')\n                  }\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onChange: (todos: Todo[]) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onChange }) => {\n  const [query, setQuery] = useState('');\n\n  const onSearchFilterChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setTimeout(() => {\n      onChange(todos.filter(todo => todo.title.includes(event.target.value)));\n    }, 1000);\n  };\n\n  const onClearSearchButtonClick = () => {\n    setQuery('');\n    onChange(todos);\n  };\n\n  const onSelectChange = (todoType: string) => {\n    if (todoType === 'completed') {\n      onChange(todos.filter(todo => todo.completed));\n    } else if (todoType === 'active') {\n      onChange(todos.filter(todo => !todo.completed));\n    } else if (todoType === 'all') {\n      onChange(todos);\n    }\n  };\n\n  useEffect(() => {\n    onChange(todos);\n  }, [onChange, todos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => {\n              onSelectChange(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={onSearchFilterChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearSearchButtonClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | null) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [modalLoading, setModalLoading] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const data = await getUser(Number(selectedTodo?.userId));\n\n      setUser(data);\n      setModalLoading(true);\n    };\n\n    loadUser();\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisivleTodos] = useState<Todo[]>(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const setAllTodos = (visibleFunction: () => Promise<Todo[]>) => {\n    setLoading(true);\n    visibleFunction()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    setAllTodos(getTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                onChange={setVisivleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}